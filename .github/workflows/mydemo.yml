# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
 # push:
  #  branches: [ main ]
  #pull_request:
   # branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
      - run: apt-get -yq update
      - run: apt update
      - run: apt install -y python3-pip
      - run: apt install -y python3-venv
      - run: pip3 install --upgrade pip
      - run: pip3 install --upgrade virtualenv
      - run: python3 -V
      - run: export PYTHONPATH=/usr/local/bin/python3
      - run: DEBIAN_FRONTEND=noninteractive apt install -y nodejs
      - run: DEBIAN_FRONTEND=noninteractive apt install -y npm
      - run: npm install -g aws-cdk
      - run: pip3 install aws-cdk.cdk
      - run: pip3 install awscli
      - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - run: aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run: aws confi- run:gure set region $AWS_DEFAULT_REGION
      - run: python3 -m venv .venv
      - run: source .venv/bin/activate
      - run: pip3 install -r requirements.txt
      - run: pip3 install boto3
      - run: cdk ls
      - run: cdk synth

    
  deploy:
    # The type of runner that the job will run on
    runs-on: banst/awscli
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - name: Run a multi-line script
        - run: aws configure set region us-east-1
